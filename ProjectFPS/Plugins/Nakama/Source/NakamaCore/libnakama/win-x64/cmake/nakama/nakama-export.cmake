# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.22)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS libHttpClient.Win32.C nakama-sdk nakama-sdk-interface nakama-api-proto)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target libHttpClient.Win32.C
add_library(libHttpClient.Win32.C INTERFACE IMPORTED)

set_target_properties(libHttpClient.Win32.C PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:websocketpp::websocketpp>;\$<LINK_ONLY:asio::asio>;\$<LINK_ONLY:OpenSSL::SSL>;\$<LINK_ONLY:winhttp>;\$<LINK_ONLY:crypt32>"
)

# Create imported target nakama-sdk
add_library(nakama-sdk SHARED IMPORTED)

set_target_properties(nakama-sdk PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "nakama-sdk-interface"
)

# Create imported target nakama-sdk-interface
add_library(nakama-sdk-interface INTERFACE IMPORTED)

set_target_properties(nakama-sdk-interface PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "optional_CONFIG_SELECT_OPTIONAL=optional_OPTIONAL_NONSTD"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "nonstd::optional-lite"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(nakama-sdk-interface
    INTERFACE
      FILE_SET "HEADERS"
      TYPE "HEADERS"
      BASE_DIRS "${_IMPORT_PREFIX}/include"
      FILES "${_IMPORT_PREFIX}/include/nakama-cpp/config.h" "${_IMPORT_PREFIX}/include/nakama-cpp/ClientFactory.h" "${_IMPORT_PREFIX}/include/nakama-cpp/NClientInterface.h" "${_IMPORT_PREFIX}/include/nakama-cpp/NError.h" "${_IMPORT_PREFIX}/include/nakama-cpp/NExport.h" "${_IMPORT_PREFIX}/include/nakama-cpp/NHttpTransportInterface.h" "${_IMPORT_PREFIX}/include/nakama-cpp/NPlatformParams.h" "${_IMPORT_PREFIX}/include/nakama-cpp/NSessionInterface.h" "${_IMPORT_PREFIX}/include/nakama-cpp/NTypes.h" "${_IMPORT_PREFIX}/include/nakama-cpp/NUtils.h" "${_IMPORT_PREFIX}/include/nakama-cpp/Nakama.h" "${_IMPORT_PREFIX}/include/nakama-cpp/NakamaVersion.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NAccount.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NAccountDevice.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NChannelMessage.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NChannelMessageList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NFriend.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NFriendList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NGroup.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NGroupList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NGroupUser.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NGroupUserList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NLeaderboardRecord.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NLeaderboardRecordList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NMatch.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NMatchList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NNotification.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NNotificationList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NRpc.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NStorageObject.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NStorageObjectAck.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NStorageObjectId.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NStorageObjectList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NStorageObjectWrite.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NStoragePermissions.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NTournament.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NTournamentList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NTournamentRecordList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NUser.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NUserGroup.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NUserGroupList.h" "${_IMPORT_PREFIX}/include/nakama-cpp/data/NUsers.h" "${_IMPORT_PREFIX}/include/nakama-cpp/log/NConsoleLogSink.h" "${_IMPORT_PREFIX}/include/nakama-cpp/log/NLogSinkInterface.h" "${_IMPORT_PREFIX}/include/nakama-cpp/log/NLogger.h" "${_IMPORT_PREFIX}/include/nakama-cpp/platform/android/android.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/NRtClientDisconnectInfo.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/NRtClientInterface.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/NRtClientListenerInterface.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/NRtDefaultClientListener.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/NRtTransportInterface.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/NWebsocketsFactory.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NChannel.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NChannelMessageAck.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NChannelPresenceEvent.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NMatchData.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NMatchPresenceEvent.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NMatchmakerMatched.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NMatchmakerTicket.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NParty.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NPartyClose.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NPartyData.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NPartyJoinRequest.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NPartyLeader.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NPartyMatchmakerTicket.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NPartyPresenceEvent.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NRtError.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NStatus.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NStatusPresenceEvent.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NStream.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NStreamData.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NStreamPresenceEvent.h" "${_IMPORT_PREFIX}/include/nakama-cpp/realtime/rtdata/NUserPresence.h"
  )
endif()

# Create imported target nakama-api-proto
add_library(nakama-api-proto INTERFACE IMPORTED)

set_target_properties(nakama-api-proto PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:protobuf::libprotobuf>"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/nakama-export-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
    if(NOT EXISTS "${_cmake_file}")
      message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
